<?php

namespace App\Http\Controllers;

use App\Models\Vulnerability;
use App\Http\Requests\StoreVulnerabilityRequest;
use App\Http\Requests\UpdateVulnerabilityRequest;

class VulnerabilityController extends Controller
{
    /**
     * set limite vulnerabilties
     */

    public $vulnerability_limit = 10;
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $vulnerabilities = Vulnerability::paginate(5);
        return view('vulnerability.index' , compact('vulnerabilities'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('vulnerability.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\StoreVulnerabilityRequest  $request
     * @return \Illuminate\Http\Response
     */
    public function store(StoreVulnerabilityRequest $request)
    {
        if( Vulnerability::count() < $this->vulnerability_limit){
            $validated = $request->validated();
            Vulnerability::create($validated);
            return redirect()->route('vulnerabilities.index')->with(['success' => 'Successfully Created']);
        }else{
            return redirect()->back()->with(['limit' => 'You only have to enter at most 10 of vulnerabilities. You can not add anymore']);
        }

    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Vulnerability  $vulnerability
     * @return \Illuminate\Http\Response
     */
    public function show(Vulnerability $vulnerability)
    {
        return view('vulnerability.view', compact('vulnerability'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Vulnerability  $vulnerability
     * @return \Illuminate\Http\Response
     */
    public function edit(Vulnerability $vulnerability)
    {
        return view('vulnerability.edit', compact('vulnerability'));        
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\UpdateVulnerabilityRequest  $request
     * @param  \App\Models\Vulnerability  $vulnerability
     * @return \Illuminate\Http\Response
     */
    public function update(UpdateVulnerabilityRequest $request, Vulnerability $vulnerability)
    {
        $validated = $request->validated();
        $vulnerability->title = $validated['title'];
        $vulnerability->description = $validated['description'];
        $vulnerability->save();

        return redirect()->route('vulnerabilities.index')->with(['success' => 'Successfully Updated']);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Vulnerability  $vulnerability
     * @return \Illuminate\Http\Response
     */
    public function destroy(Vulnerability $vulnerability)
    {
        $vulnerability->delete();
        return redirect()->route('vulnerabilities.index')->with(['success' => 'Successfully Deleted']);
    }
}
